@page "/adduser"
@rendermode InteractiveServer
@using BlazorApp1.Models
@inject YagorchickContext context

<h3>Добавить Пользователя</h3>

<EditForm Model="newUser " OnValidSubmit="HandleValidSubmit" FormName="addUser  Form">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="firstName">Имя</label>
        <InputText id="firstName" class="form-control" @bind-Value="newUser .FirstName" />
        <ValidationMessage For="@(() => newUser .FirstName)" />
    </div>

    <div class="form-group">
        <label for="username">Ник</label>
        <InputText id="username" class="form-control" @bind-Value="newUser .Username" />
        <ValidationMessage For="@(() => newUser .Username)" />
    </div>

    <div class="form-group">
        <label for="email">Электронная Почта</label>
        <InputText id="email" type="email" class="form-control" @bind-Value="newUser .Email" />
        <ValidationMessage For="@(() => newUser .Email)" />
    </div>

    <div class="form-group">
        <label for="password">Пароль</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="newUser .PasswordHash" />
        <ValidationMessage For="@(() => newUser .PasswordHash)" />
    </div>

    <button type="submit" class="btn btn-primary">Добавить</button>
</EditForm>

@code {
    private User newUser = new User();

    private async Task HandleValidSubmit()
    {
        Console.WriteLine("HandleValidSubmit called");
        Console.WriteLine($"Username: {newUser.Username}, Email: {newUser.Email}, Password: '{newUser.PasswordHash}'");

        try
        {
            if (string.IsNullOrWhiteSpace(newUser.PasswordHash))
            {
                Console.WriteLine("Password cannot be empty.");
                return;
            }

            newUser.PasswordHash = BCrypt.Net.BCrypt.HashPassword(newUser.PasswordHash);
            newUser.CreatedAt = DateTime.Now;

            context.Users.Add(newUser);
            await context.SaveChangesAsync();

            Console.WriteLine("User  added successfully!");

            newUser = new User();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error adding user: {ex.Message}");
        }
    }
}

